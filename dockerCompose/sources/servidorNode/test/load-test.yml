config:
  target: "http://localhost:3000"
  phases:
    - duration: 30
      arrivalRate: 2
      name: "Calentamiento"
    - duration: 60
      arrivalRate: 5
      rampTo: 10
      name: "Carga media"
    - duration: 90
      arrivalRate: 10
      rampTo: 15
      name: "Carga alta"
  defaults:
    headers:
      Content-Type: "application/json"

scenarios:
  - name: "Prueba de carga - Autenticación"
    weight: 20
    flow:
      # Test de login exitoso
      - post:
          url: "/auth/login"
          json:
            email: "test@example.com"
            contrasena: "password123"
          capture:
            - json: "$.token"
              as: "authToken"
          expect:
            - statusCode: [200, 400, 401]

      # Test de login con credenciales inválidas
      - post:
          url: "/auth/login"
          json:
            email: "invalid@example.com"
            contrasena: "wrongpassword"
          expect:
            - statusCode: [400, 401]

  - name: "Prueba de carga - Acceso de Paciente con Token"
    weight: 40
    flow:
      # Login como paciente para obtener token
      - post:
          url: "/login"
          json:
            email: "carlos@example.com"
            contrasena: "contrasena_segura123"
          capture:
            - json: "$.token"
              as: "authToken"
            - json: "$.usuario.id"
              as: "userId"
          expect:
            - statusCode: [200]

      # Obtener citas del paciente
      - get:
          url: "/citas/{{ userId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: [200, 404]

      # Obtener historial médico del paciente
      - get:
          url: "/historial/{{ userId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: [200, 404]

      # Obtener facturas del paciente
      - get:
          url: "/facturas/{{ userId }}"
          headers:
            Authorization: "Bearer {{ authToken }}"
          expect:
            - statusCode: [200, 404]



  